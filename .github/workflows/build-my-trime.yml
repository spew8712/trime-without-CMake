name: Build My Trime

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      newcode:
        description: 'Compile trime from env REPO_URL(not your repository)'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/tumuyan/trime-without-CMake
  REPO_BRANCH: develop
  PACKAGE_NAME: com.tumuyan.trime
  PACKAGE_NAME_NEW: com.tumuyan.trime.pro
  APP_NAME: Trime·Trime
  APP_NAME_CN: 同文输入法・Trime
  APP_NAME_TW: 同文輸入法・Trime
  APP_NAME_NEW: TrimePro
  APP_NAME_NEW_CN: 同文输入法Pro
  APP_NAME_NEW_TW: 同文輸入法Pro
#  FEEDS_CONF: feeds.conf.default
#  CONFIG_FILE: .config
#  DIY_P1_SH: diy-part1.sh
#  DIY_P2_SH: diy-part2.sh
#  UPLOAD_BIN_DIR: false
#  UPLOAD_FIRMWARE: true
#  UPLOAD_COWTRANSFER: false
#  UPLOAD_WETRANSFER: false
#  UPLOAD_RELEASE: false
#  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout last commit
      uses: actions/checkout@v3
#      if: (github.event.inputs.newcode == 'true')
      with:
        fetch-depth: 0

    - name: Clone code frome tumuyan/trime-without-CMake
#      working-directory: /workdir
      if: (github.event.inputs.newcode == 'true')
      run: |
        echo $GITHUB_WORKSPACE
        pwd
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH ../tumuyan
        cp -fr ../tumuyan/* $GITHUB_WORKSPACE

    - name: Apply Custom Define
      run: |
        sed -i s/$PACKAGE_NAME/$PACKAGE_NAME_NEW/g app/build.gradle
        sed -i s/$APP_NAME/$APP_NAME_NEW/g app/src/main/res/values/strings.xml
        sed -i s/$APP_NAME_TW/$APP_NAME_NEW_TW/g app/src/main/res/values-zh-rTW/strings.xml
        sed -i s/$APP_NAME_CN/$APP_NAME_NEW_CN/g app/src/main/res/values-zh-rCN/strings.xml

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: "temurin"
        java-version: 17
        # will restore cache of dependencies and wrappers
        cache: 'gradle'


    - name: Setup Android SDK
      uses: android-actions/setup-android@v2


    - name: Build Trime
      run: make debug

    - name: Upload Trime artifact
      uses: actions/upload-artifact@v3
      with:
        name: trime.zip
        path: app/build/outputs/apk/**/*.apk
        # keep 90 days
        retention-days: 90

#
#
#    - name: Install feeds
#      run: cd openwrt && ./scripts/feeds install -a
#
#    - name: Load custom configuration
#      run: |
#        [ -e files ] && mv files openwrt/files
#        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
#        chmod +x $DIY_P2_SH
#        cd openwrt
#        $GITHUB_WORKSPACE/$DIY_P2_SH
#
#
#    - name: Compile the firmware
#      id: compile
#      run: |
#        cd openwrt
#        echo -e "$(nproc) thread compile"
#        make -j$(nproc) || make -j1 || make -j1 V=s
#        echo "::set-output name=status::success"
#        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
#        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
#        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
#
#
#
#    - name: Upload firmware directory
#      uses: actions/upload-artifact@main
#      if: steps.organize.outputs.status == 'success' && !cancelled()
#      with:
#        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
#        path: ${{ env.FIRMWARE }}
#
#
#    - name: Generate release tag
#      id: tag
#      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
#      run: |
#        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
#        touch release.txt
#        [ $UPLOAD_COWTRANSFER = true ] && echo "🔗 [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
#        [ $UPLOAD_WETRANSFER = true ] && echo "🔗 [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
#        echo "::set-output name=status::success"
#
#    - name: Upload firmware to release
#      uses: softprops/action-gh-release@v1
#      if: steps.tag.outputs.status == 'success' && !cancelled()
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ steps.tag.outputs.release_tag }}
#        body_path: release.txt
#        files: ${{ env.FIRMWARE }}/*
#
